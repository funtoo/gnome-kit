From bdd3acbd48a575d418ba6bf1b32d7bda2fae1c81 Mon Sep 17 00:00:00 2001
From: Robert Ancell <robert.ancell@canonical.com>
Date: Mon, 30 Nov 2020 12:26:12 +1300
Subject: [PATCH] gif: Fix LZW decoder accepting invalid LZW code.

The code value after a reset wasn't being validated, which means we would
accept invalid codes. This could cause an infinite loop in the decoder.

Fixes CVE-2020-29385

Fixes https://gitlab.gnome.org/GNOME/gdk-pixbuf/-/issues/164
---
 gdk-pixbuf/lzw.c                    |  13 +++++++------
 tests/test-images/fail/hang_114.gif | Bin 0 -> 5561 bytes
 2 files changed, 7 insertions(+), 6 deletions(-)
 create mode 100644 tests/test-images/fail/hang_114.gif

diff --git a/gdk-pixbuf/lzw.c b/gdk-pixbuf/lzw.c
index 9e052a6f7..105daf2b1 100644
--- a/gdk-pixbuf/lzw.c
+++ b/gdk-pixbuf/lzw.c
@@ -195,19 +195,20 @@ lzw_decoder_feed (LZWDecoder *self,
                                 if (self->last_code != self->clear_code && self->code_table_size < MAX_CODES) {
                                         if (self->code < self->code_table_size)
                                                 add_code (self, self->code);
-                                        else if (self->code == self->code_table_size)
+                                        else
                                                 add_code (self, self->last_code);
-                                        else {
-                                                /* Invalid code received - just stop here */
-                                                self->last_code = self->eoi_code;
-                                                return output_length;
-                                        }
 
                                         /* When table is full increase code size */
                                         if (self->code_table_size == (1 << self->code_size) && self->code_size < LZW_CODE_MAX)
                                                 self->code_size++;
                                 }
 
+                                /* Invalid code received - just stop here */
+                                if (self->code >= self->code_table_size) {
+                                        self->last_code = self->eoi_code;
+                                        return output_length;
+                                }
+
                                 /* Convert codeword into indexes */
                                 n_written += write_indexes (self, output + n_written, output_length - n_written);
                         }
diff --git a/tests/test-images/fail/hang_114.gif b/tests/test-images/fail/hang_114.gif
new file mode 100644
index 0000000000000000000000000000000000000000..4d7d252cbf077b9577456b472c014a84e36bd809
GIT binary patch
literal 5561
zcmeHLJ4*vW5T5k}i-2S=jX}YSf;JY>AZX<k;^Sx7<PZ1*Oz$5^3c*Swh=qm3cOz;M
z5bV@ij93VYf*`Cjceyj?d6$dH<}Ts{cIWZUH<R3B$;>a#O-(NW)8Lswwp<oM06?aY
zEr>EIrlj7x4P}g04L_i)_U)J4QrrL~rRu{7dk~Oi0A*1aK+ZSHtPxcw!%fh3&rMq^
z9<{YvZ81@6v`Rm1713{aDvFgAkz2`Xr!)6r7;X1AFVfl;A{T`hl(g>`5^>&L*Lf3Y
zXbPvxwAfEh!`IvICjIvW{{>EhL!*fV_zTY}o?}vuX}@cBh{61>3*mg!CY@$5%f;EO
zW2;#L+4(#53S8F%gciRIt+Kqr3*OW#wSPWFTP5E0q8K^1n|ic03Cd*v&KD0%+`}*1
zJ%J*p#(J}~S_1?J4PYfh>6nR{xK6#R(nZ)k&V=1S!}aqGXLuxRd-(m`oBm;p9@j<q
z0nYq_7^87nskCOJ_G~Sn66F0Dkg7vqG_C<)z^gLk5U%!Qs$v3h*f^l08UtOgD43Wq
z{4{4Y6zH;TrSgP&W{@0KJdV@H50*%qzMPJ`fP2$Y^*g|fI9ZHVW~L!Ji5gEQDMCU;
zW7cSsFEdVjPntSHL7o`rxW$zeu8ebo&!~?B&{-4$S^ba>uitDVj!O=kqxq{-RQ=0F
IM#>f96JKQRj{pDw

literal 0
HcmV?d00001

-- 
GitLab

